# Python CircleCI 2.0 configuration file
# 
# Check https://circleci.com/docs/2.0/language-python/ for more details
# 

version: 2.1
orbs:
  docker: circleci/docker@1.6.0
  aws-eks: circleci/aws-eks@0.2.3
  kubernetes: circleci/kubernetes@0.12.0
  
jobs:

  build:
    docker:
      - image: python:3.7.3-stretch
      
    working_directory: ~/repo
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
                

   test_lint:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: python:3.7.3-stretch
      
    working_directory: ~/repo
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
            # run lints!
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
            make lint
   docker_build:
     docker:
       - image: docker:17.05.0-ce-git
     working_directory: ~/repo
     steps:
        - checkout
        - setup_remote_docker
        - run:
            name: Build application Docker image
            command: |
              docker build -t $DOCKER_LOGIN/UdacityCapstone .
              docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
              docker push $DOCKER_LOGIN/UdacityCapstone
  
workflows:
  my_workflow:
    jobs:
      - build
      - test_lint:
          requires: [build]
      - docker_build:
          requires: [test_lint]
      #- Infrastructure_and_Deployment:
       #   requires: [docker_build]